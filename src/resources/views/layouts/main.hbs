<html lang='en'>

<head>
   <meta charset='UTF-8' />
   <meta name='viewport' content='width=device-width, initial-scale=1.0' />

   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
   <link rel="stylesheet" href="/css/app.css">
   <link rel="stylesheet" href="/css/gridSystem.css">

   <title>Document</title>
</head>

<body>
   <div class='app'>
      {{> header/header}}

      <div class='wrapper'>
         {{{body}}}
      </div>

      {{> footer/footer}}
   </div>

   <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"></script>
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
      crossorigin="anonymous"></script>
</body>
{{!-- Clamps library --}}
<script>
   /*!
* Clamp.js 0.5.1
*
* Copyright 2011-2013, Joseph Schmitt http://joe.sh
* Released under the WTFPL license
* http://sam.zoy.org/wtfpl/
*/
   (function () {
      window.$clamp = function (c, d) {
         function s(a, b) { n.getComputedStyle || (n.getComputedStyle = function (a, b) { this.el = a; this.getPropertyValue = function (b) { var c = /(\-([a-z]){1})/g; "float" == b && (b = "styleFloat"); c.test(b) && (b = b.replace(c, function (a, b, c) { return c.toUpperCase() })); return a.currentStyle && a.currentStyle[b] ? a.currentStyle[b] : null }; return this }); return n.getComputedStyle(a, null).getPropertyValue(b) } function t(a) { a = a || c.clientHeight; var b = u(c); return Math.max(Math.floor(a / b), 0) } function x(a) {
            return u(c) *
               a
         } function u(a) { var b = s(a, "line-height"); "normal" == b && (b = 1.2 * parseInt(s(a, "font-size"))); return parseInt(b) } function l(a) { if (a.lastChild.children && 0 < a.lastChild.children.length) return l(Array.prototype.slice.call(a.children).pop()); if (a.lastChild && a.lastChild.nodeValue && "" != a.lastChild.nodeValue && a.lastChild.nodeValue != b.truncationChar) return a.lastChild; a.lastChild.parentNode.removeChild(a.lastChild); return l(c) } function p(a, d) {
            if (d) {
               var e = a.nodeValue.replace(b.truncationChar, ""); f || (h = 0 < k.length ?
                  k.shift() : "", f = e.split(h)); 1 < f.length ? (q = f.pop(), r(a, f.join(h))) : f = null; m && (a.nodeValue = a.nodeValue.replace(b.truncationChar, ""), c.innerHTML = a.nodeValue + " " + m.innerHTML + b.truncationChar); if (f) { if (c.clientHeight <= d) if (0 <= k.length && "" != h) r(a, f.join(h) + h + q), f = null; else return c.innerHTML } else "" == h && (r(a, ""), a = l(c), k = b.splitOnChars.slice(0), h = k[0], q = f = null); if (b.animate) setTimeout(function () { p(a, d) }, !0 === b.animate ? 10 : b.animate); else return p(a, d)
            }
         } function r(a, c) { a.nodeValue = c + b.truncationChar } d = d || {};
         var n = window, b = { clamp: d.clamp || 2, useNativeClamp: "undefined" != typeof d.useNativeClamp ? d.useNativeClamp : !0, splitOnChars: d.splitOnChars || [".", "-", "\u2013", "\u2014", " "], animate: d.animate || !1, truncationChar: d.truncationChar || "\u2026", truncationHTML: d.truncationHTML }, e = c.style, y = c.innerHTML, z = "undefined" != typeof c.style.webkitLineClamp, g = b.clamp, v = g.indexOf && (-1 < g.indexOf("px") || -1 < g.indexOf("em")), m; b.truncationHTML && (m = document.createElement("span"), m.innerHTML = b.truncationHTML); var k = b.splitOnChars.slice(0),
            h = k[0], f, q; "auto" == g ? g = t() : v && (g = t(parseInt(g))); var w; z && b.useNativeClamp ? (e.overflow = "hidden", e.textOverflow = "ellipsis", e.webkitBoxOrient = "vertical", e.display = "-webkit-box", e.webkitLineClamp = g, v && (e.height = b.clamp + "px")) : (e = x(g), e <= c.clientHeight && (w = p(l(c), e))); return { original: y, clamped: w }
      }
   })();
</script>
{{!-- Sticky library --}}
<script>
   /*!
  * Stickyfill â€“ `position: sticky` polyfill
  * v. 2.1.0 | https://github.com/wilddeer/stickyfill
  * MIT License
  */
   !function (a, b) { "use strict"; function c(a, b) { if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function") } function d(a, b) { for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]) } function e(a) { return parseFloat(a) || 0 } function f(a) { for (var b = 0; a;)b += a.offsetTop, a = a.offsetParent; return b } function g() { function c() { a.pageXOffset != m.left ? (m.top = a.pageYOffset, m.left = a.pageXOffset, p.refreshAll()) : a.pageYOffset != m.top && (m.top = a.pageYOffset, m.left = a.pageXOffset, n.forEach(function (a) { return a._recalcPosition() })) } function d() { f = setInterval(function () { n.forEach(function (a) { return a._fastCheck() }) }, 500) } function e() { clearInterval(f) } if (!k) { k = !0, c(), a.addEventListener("scroll", c), a.addEventListener("resize", p.refreshAll), a.addEventListener("orientationchange", p.refreshAll); var f = void 0, g = void 0, h = void 0; "hidden" in b ? (g = "hidden", h = "visibilitychange") : "webkitHidden" in b && (g = "webkitHidden", h = "webkitvisibilitychange"), h ? (b[g] || d(), b.addEventListener(h, function () { b[g] ? e() : d() })) : d() } } var h = function () { function a(a, b) { for (var c = 0; c < b.length; c++) { var d = b[c]; d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d) } } return function (b, c, d) { return c && a(b.prototype, c), d && a(b, d), b } }(), i = !1, j = "undefined" != typeof a; j && a.getComputedStyle ? !function () { var a = b.createElement("div");["", "-webkit-", "-moz-", "-ms-"].some(function (b) { try { a.style.position = b + "sticky" } catch (a) { } return "" != a.style.position }) && (i = !0) }() : i = !0; var k = !1, l = "undefined" != typeof ShadowRoot, m = { top: null, left: null }, n = [], o = function () { function g(a) { if (c(this, g), !(a instanceof HTMLElement)) throw new Error("First argument must be HTMLElement"); if (n.some(function (b) { return b._node === a })) throw new Error("Stickyfill is already applied to this node"); this._node = a, this._stickyMode = null, this._active = !1, n.push(this), this.refresh() } return h(g, [{ key: "refresh", value: function () { if (!i && !this._removed) { this._active && this._deactivate(); var c = this._node, g = getComputedStyle(c), h = { position: g.position, top: g.top, display: g.display, marginTop: g.marginTop, marginBottom: g.marginBottom, marginLeft: g.marginLeft, marginRight: g.marginRight, cssFloat: g.cssFloat }; if (!isNaN(parseFloat(h.top)) && "table-cell" != h.display && "none" != h.display) { this._active = !0; var j = c.style.position; "sticky" != g.position && "-webkit-sticky" != g.position || (c.style.position = "static"); var k = c.parentNode, m = l && k instanceof ShadowRoot ? k.host : k, n = c.getBoundingClientRect(), o = m.getBoundingClientRect(), p = getComputedStyle(m); this._parent = { node: m, styles: { position: m.style.position }, offsetHeight: m.offsetHeight }, this._offsetToWindow = { left: n.left, right: b.documentElement.clientWidth - n.right }, this._offsetToParent = { top: n.top - o.top - e(p.borderTopWidth), left: n.left - o.left - e(p.borderLeftWidth), right: -n.right + o.right - e(p.borderRightWidth) }, this._styles = { position: j, top: c.style.top, bottom: c.style.bottom, left: c.style.left, right: c.style.right, width: c.style.width, marginTop: c.style.marginTop, marginLeft: c.style.marginLeft, marginRight: c.style.marginRight }; var q = e(h.top); this._limits = { start: n.top + a.pageYOffset - q, end: o.top + a.pageYOffset + m.offsetHeight - e(p.borderBottomWidth) - c.offsetHeight - q - e(h.marginBottom) }; var r = p.position; "absolute" != r && "relative" != r && (m.style.position = "relative"), this._recalcPosition(); var s = this._clone = {}; s.node = b.createElement("div"), d(s.node.style, { width: n.right - n.left + "px", height: n.bottom - n.top + "px", marginTop: h.marginTop, marginBottom: h.marginBottom, marginLeft: h.marginLeft, marginRight: h.marginRight, cssFloat: h.cssFloat, padding: 0, border: 0, borderSpacing: 0, fontSize: "1em", position: "static" }), k.insertBefore(s.node, c), s.docOffsetTop = f(s.node) } } } }, { key: "_recalcPosition", value: function () { if (this._active && !this._removed) { var a = m.top <= this._limits.start ? "start" : m.top >= this._limits.end ? "end" : "middle"; if (this._stickyMode != a) { switch (a) { case "start": d(this._node.style, { position: "absolute", left: this._offsetToParent.left + "px", right: this._offsetToParent.right + "px", top: this._offsetToParent.top + "px", bottom: "auto", width: "auto", marginLeft: 0, marginRight: 0, marginTop: 0 }); break; case "middle": d(this._node.style, { position: "fixed", left: this._offsetToWindow.left + "px", right: this._offsetToWindow.right + "px", top: this._styles.top, bottom: "auto", width: "auto", marginLeft: 0, marginRight: 0, marginTop: 0 }); break; case "end": d(this._node.style, { position: "absolute", left: this._offsetToParent.left + "px", right: this._offsetToParent.right + "px", top: "auto", bottom: 0, width: "auto", marginLeft: 0, marginRight: 0 }) }this._stickyMode = a } } } }, { key: "_fastCheck", value: function () { this._active && !this._removed && (Math.abs(f(this._clone.node) - this._clone.docOffsetTop) > 1 || Math.abs(this._parent.node.offsetHeight - this._parent.offsetHeight) > 1) && this.refresh() } }, { key: "_deactivate", value: function () { var a = this; this._active && !this._removed && (this._clone.node.parentNode.removeChild(this._clone.node), delete this._clone, d(this._node.style, this._styles), delete this._styles, n.some(function (b) { return b !== a && b._parent && b._parent.node === a._parent.node }) || d(this._parent.node.style, this._parent.styles), delete this._parent, this._stickyMode = null, this._active = !1, delete this._offsetToWindow, delete this._offsetToParent, delete this._limits) } }, { key: "remove", value: function () { var a = this; this._deactivate(), n.some(function (b, c) { if (b._node === a._node) return n.splice(c, 1), !0 }), this._removed = !0 } }]), g }(), p = { stickies: n, Sticky: o, forceSticky: function () { i = !1, g(), this.refreshAll() }, addOne: function (a) { if (!(a instanceof HTMLElement)) { if (!a.length || !a[0]) return; a = a[0] } for (var b = 0; b < n.length; b++)if (n[b]._node === a) return n[b]; return new o(a) }, add: function (a) { if (a instanceof HTMLElement && (a = [a]), a.length) { for (var b = [], c = function (c) { var d = a[c]; return d instanceof HTMLElement ? n.some(function (a) { if (a._node === d) return b.push(a), !0 }) ? "continue" : void b.push(new o(d)) : (b.push(void 0), "continue") }, d = 0; d < a.length; d++) { c(d) } return b } }, refreshAll: function () { n.forEach(function (a) { return a.refresh() }) }, removeOne: function (a) { if (!(a instanceof HTMLElement)) { if (!a.length || !a[0]) return; a = a[0] } n.some(function (b) { if (b._node === a) return b.remove(), !0 }) }, remove: function (a) { if (a instanceof HTMLElement && (a = [a]), a.length) for (var b = function (b) { var c = a[b]; n.some(function (a) { if (a._node === c) return a.remove(), !0 }) }, c = 0; c < a.length; c++)b(c) }, removeAll: function () { for (; n.length;)n[0].remove() } }; i || g(), "undefined" != typeof module && module.exports ? module.exports = p : j && (a.Stickyfill = p) }(window, document);
</script>
<script>
   const clampEls = document.querySelectorAll('.clamp-text');
   clampEls.forEach((el) => {
      const classList = [...el.classList];
      const filter = classList.find(cl => cl.includes('clpt-'));
      if (!filter) return console.warn('ChÆ°a thÃªm class clpt-{number}');

      const lineClampNumber = filter.replace('clpt-', '');

      $clamp(el, { clamp: lineClampNumber, useNativeClamp: false });
   })
   //$clamp(clampEls, { clamp: 10, useNativeClamp: false, animate: true });

   const stickyEl = document.querySelectorAll('.test-sticky');
   Stickyfill.add(stickyEl);
</script>

</html>